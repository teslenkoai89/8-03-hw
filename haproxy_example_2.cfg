#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # log to /dev/log
    log /dev/log daemon

    # log to local syslogd from chroot over UDP
    #log         127.0.0.1:514 local2
    #log         tcp@127.0.0.1:514 local2 notice

    # send log to systemd-journald
    #log stdout format short daemon

    chroot      /var/lib/haproxy
    pidfile     /run/haproxy.pid
    maxconn     4000
    user        _haproxy
    group       _haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
 #   option http-server-close
 #   option forwardfor       except 127.0.0.0/8
 #   option                  redispatch
 #   retries                 3
 #   timeout http-request    10s
#    timeout queue           1m
   timeout connect         10s
    timeout client          1m
    timeout server          1m
#    timeout http-keep-alive 10s
#    timeout check           10s
#    maxconn                 3000

listen stats
	bind		:888
	mode		http
	stats		enable
	stats uri	/stats
	stats refresh	5s

frontend example
	mode http
	bind :8088
#	default_backend web_servers
	#acl is_example hdr(host) -i example.local
	#use_backend web_servers if is_example
	acl is_example hdr(host),lower -m str example.local
	use_backend web_servers if is_example

backend	web_servers
	mode http
	balance roundrobin
	option httpchk
	http-check send meth GET uri /index.html
	server s1 127.0.0.1:8888 weight 2 check
	server s2 127.0.0.1:9999 weight 3 check
	server s3 127.0.0.1:1234 weight 4 check

listen web_tcp
	bind :12345
	server s1 127.0.0.1:8888 weight 2 check
	server s2 127.0.0.1:9999 weight 3 check
	server s3 127.0.0.1:1234 weight 4 check


